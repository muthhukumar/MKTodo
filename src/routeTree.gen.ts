/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth.index'
import { Route as AuthTasksPlannedImport } from './routes/_auth.tasks.planned'
import { Route as AuthTasksMyDayImport } from './routes/_auth.tasks.my-day'
import { Route as AuthTasksImportantImport } from './routes/_auth.tasks.important'
import { Route as AuthTasksAllImport } from './routes/_auth.tasks.all'
import { Route as AuthTasksPlannedTaskIdImport } from './routes/_auth.tasks.planned.$taskId'
import { Route as AuthTasksMyDayTaskIdImport } from './routes/_auth.tasks.my-day.$taskId'
import { Route as AuthTasksImportantTaskIdImport } from './routes/_auth.tasks.important.$taskId'
import { Route as AuthTasksAllTaskIdImport } from './routes/_auth.tasks.all.$taskId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTasksPlannedRoute = AuthTasksPlannedImport.update({
  path: '/tasks/planned',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTasksMyDayRoute = AuthTasksMyDayImport.update({
  path: '/tasks/my-day',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTasksImportantRoute = AuthTasksImportantImport.update({
  path: '/tasks/important',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTasksAllRoute = AuthTasksAllImport.update({
  path: '/tasks/all',
  getParentRoute: () => AuthRoute,
} as any)

const AuthTasksPlannedTaskIdRoute = AuthTasksPlannedTaskIdImport.update({
  path: '/$taskId',
  getParentRoute: () => AuthTasksPlannedRoute,
} as any)

const AuthTasksMyDayTaskIdRoute = AuthTasksMyDayTaskIdImport.update({
  path: '/$taskId',
  getParentRoute: () => AuthTasksMyDayRoute,
} as any)

const AuthTasksImportantTaskIdRoute = AuthTasksImportantTaskIdImport.update({
  path: '/$taskId',
  getParentRoute: () => AuthTasksImportantRoute,
} as any)

const AuthTasksAllTaskIdRoute = AuthTasksAllTaskIdImport.update({
  path: '/$taskId',
  getParentRoute: () => AuthTasksAllRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/tasks/all': {
      id: '/_auth/tasks/all'
      path: '/tasks/all'
      fullPath: '/tasks/all'
      preLoaderRoute: typeof AuthTasksAllImport
      parentRoute: typeof AuthImport
    }
    '/_auth/tasks/important': {
      id: '/_auth/tasks/important'
      path: '/tasks/important'
      fullPath: '/tasks/important'
      preLoaderRoute: typeof AuthTasksImportantImport
      parentRoute: typeof AuthImport
    }
    '/_auth/tasks/my-day': {
      id: '/_auth/tasks/my-day'
      path: '/tasks/my-day'
      fullPath: '/tasks/my-day'
      preLoaderRoute: typeof AuthTasksMyDayImport
      parentRoute: typeof AuthImport
    }
    '/_auth/tasks/planned': {
      id: '/_auth/tasks/planned'
      path: '/tasks/planned'
      fullPath: '/tasks/planned'
      preLoaderRoute: typeof AuthTasksPlannedImport
      parentRoute: typeof AuthImport
    }
    '/_auth/tasks/all/$taskId': {
      id: '/_auth/tasks/all/$taskId'
      path: '/$taskId'
      fullPath: '/tasks/all/$taskId'
      preLoaderRoute: typeof AuthTasksAllTaskIdImport
      parentRoute: typeof AuthTasksAllImport
    }
    '/_auth/tasks/important/$taskId': {
      id: '/_auth/tasks/important/$taskId'
      path: '/$taskId'
      fullPath: '/tasks/important/$taskId'
      preLoaderRoute: typeof AuthTasksImportantTaskIdImport
      parentRoute: typeof AuthTasksImportantImport
    }
    '/_auth/tasks/my-day/$taskId': {
      id: '/_auth/tasks/my-day/$taskId'
      path: '/$taskId'
      fullPath: '/tasks/my-day/$taskId'
      preLoaderRoute: typeof AuthTasksMyDayTaskIdImport
      parentRoute: typeof AuthTasksMyDayImport
    }
    '/_auth/tasks/planned/$taskId': {
      id: '/_auth/tasks/planned/$taskId'
      path: '/$taskId'
      fullPath: '/tasks/planned/$taskId'
      preLoaderRoute: typeof AuthTasksPlannedTaskIdImport
      parentRoute: typeof AuthTasksPlannedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthIndexRoute,
    AuthTasksAllRoute: AuthTasksAllRoute.addChildren({
      AuthTasksAllTaskIdRoute,
    }),
    AuthTasksImportantRoute: AuthTasksImportantRoute.addChildren({
      AuthTasksImportantTaskIdRoute,
    }),
    AuthTasksMyDayRoute: AuthTasksMyDayRoute.addChildren({
      AuthTasksMyDayTaskIdRoute,
    }),
    AuthTasksPlannedRoute: AuthTasksPlannedRoute.addChildren({
      AuthTasksPlannedTaskIdRoute,
    }),
  }),
  LoginRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/",
        "/_auth/tasks/all",
        "/_auth/tasks/important",
        "/_auth/tasks/my-day",
        "/_auth/tasks/planned"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/": {
      "filePath": "_auth.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/tasks/all": {
      "filePath": "_auth.tasks.all.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/tasks/all/$taskId"
      ]
    },
    "/_auth/tasks/important": {
      "filePath": "_auth.tasks.important.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/tasks/important/$taskId"
      ]
    },
    "/_auth/tasks/my-day": {
      "filePath": "_auth.tasks.my-day.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/tasks/my-day/$taskId"
      ]
    },
    "/_auth/tasks/planned": {
      "filePath": "_auth.tasks.planned.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/tasks/planned/$taskId"
      ]
    },
    "/_auth/tasks/all/$taskId": {
      "filePath": "_auth.tasks.all.$taskId.tsx",
      "parent": "/_auth/tasks/all"
    },
    "/_auth/tasks/important/$taskId": {
      "filePath": "_auth.tasks.important.$taskId.tsx",
      "parent": "/_auth/tasks/important"
    },
    "/_auth/tasks/my-day/$taskId": {
      "filePath": "_auth.tasks.my-day.$taskId.tsx",
      "parent": "/_auth/tasks/my-day"
    },
    "/_auth/tasks/planned/$taskId": {
      "filePath": "_auth.tasks.planned.$taskId.tsx",
      "parent": "/_auth/tasks/planned"
    }
  }
}
ROUTE_MANIFEST_END */
