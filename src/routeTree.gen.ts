/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth.index'
import { Route as AuthPlannedImport } from './routes/_auth.planned'
import { Route as AuthMyDayImport } from './routes/_auth.my-day'
import { Route as AuthMobileNavImport } from './routes/_auth.mobile-nav'
import { Route as AuthImportantImport } from './routes/_auth.important'
import { Route as AuthIndexTaskIdImport } from './routes/_auth.index.$taskId'
import { Route as AuthPlannedTaskIdImport } from './routes/_auth.planned.$taskId'
import { Route as AuthMyDayTaskIdImport } from './routes/_auth.my-day.$taskId'
import { Route as AuthImportantTaskIdImport } from './routes/_auth.important.$taskId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPlannedRoute = AuthPlannedImport.update({
  path: '/planned',
  getParentRoute: () => AuthRoute,
} as any)

const AuthMyDayRoute = AuthMyDayImport.update({
  path: '/my-day',
  getParentRoute: () => AuthRoute,
} as any)

const AuthMobileNavRoute = AuthMobileNavImport.update({
  path: '/mobile-nav',
  getParentRoute: () => AuthRoute,
} as any)

const AuthImportantRoute = AuthImportantImport.update({
  path: '/important',
  getParentRoute: () => AuthRoute,
} as any)

const AuthIndexTaskIdRoute = AuthIndexTaskIdImport.update({
  path: '/index/$taskId',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPlannedTaskIdRoute = AuthPlannedTaskIdImport.update({
  path: '/$taskId',
  getParentRoute: () => AuthPlannedRoute,
} as any)

const AuthMyDayTaskIdRoute = AuthMyDayTaskIdImport.update({
  path: '/$taskId',
  getParentRoute: () => AuthMyDayRoute,
} as any)

const AuthImportantTaskIdRoute = AuthImportantTaskIdImport.update({
  path: '/$taskId',
  getParentRoute: () => AuthImportantRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/important': {
      id: '/_auth/important'
      path: '/important'
      fullPath: '/important'
      preLoaderRoute: typeof AuthImportantImport
      parentRoute: typeof AuthImport
    }
    '/_auth/mobile-nav': {
      id: '/_auth/mobile-nav'
      path: '/mobile-nav'
      fullPath: '/mobile-nav'
      preLoaderRoute: typeof AuthMobileNavImport
      parentRoute: typeof AuthImport
    }
    '/_auth/my-day': {
      id: '/_auth/my-day'
      path: '/my-day'
      fullPath: '/my-day'
      preLoaderRoute: typeof AuthMyDayImport
      parentRoute: typeof AuthImport
    }
    '/_auth/planned': {
      id: '/_auth/planned'
      path: '/planned'
      fullPath: '/planned'
      preLoaderRoute: typeof AuthPlannedImport
      parentRoute: typeof AuthImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/important/$taskId': {
      id: '/_auth/important/$taskId'
      path: '/$taskId'
      fullPath: '/important/$taskId'
      preLoaderRoute: typeof AuthImportantTaskIdImport
      parentRoute: typeof AuthImportantImport
    }
    '/_auth/my-day/$taskId': {
      id: '/_auth/my-day/$taskId'
      path: '/$taskId'
      fullPath: '/my-day/$taskId'
      preLoaderRoute: typeof AuthMyDayTaskIdImport
      parentRoute: typeof AuthMyDayImport
    }
    '/_auth/planned/$taskId': {
      id: '/_auth/planned/$taskId'
      path: '/$taskId'
      fullPath: '/planned/$taskId'
      preLoaderRoute: typeof AuthPlannedTaskIdImport
      parentRoute: typeof AuthPlannedImport
    }
    '/_auth/index/$taskId': {
      id: '/_auth/index/$taskId'
      path: '/index/$taskId'
      fullPath: '/index/$taskId'
      preLoaderRoute: typeof AuthIndexTaskIdImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthImportantRoute: AuthImportantRoute.addChildren({
      AuthImportantTaskIdRoute,
    }),
    AuthMobileNavRoute,
    AuthMyDayRoute: AuthMyDayRoute.addChildren({ AuthMyDayTaskIdRoute }),
    AuthPlannedRoute: AuthPlannedRoute.addChildren({ AuthPlannedTaskIdRoute }),
    AuthIndexRoute,
    AuthIndexTaskIdRoute,
  }),
  LoginRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/important",
        "/_auth/mobile-nav",
        "/_auth/my-day",
        "/_auth/planned",
        "/_auth/",
        "/_auth/index/$taskId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/important": {
      "filePath": "_auth.important.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/important/$taskId"
      ]
    },
    "/_auth/mobile-nav": {
      "filePath": "_auth.mobile-nav.tsx",
      "parent": "/_auth"
    },
    "/_auth/my-day": {
      "filePath": "_auth.my-day.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/my-day/$taskId"
      ]
    },
    "/_auth/planned": {
      "filePath": "_auth.planned.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/planned/$taskId"
      ]
    },
    "/_auth/": {
      "filePath": "_auth.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/important/$taskId": {
      "filePath": "_auth.important.$taskId.tsx",
      "parent": "/_auth/important"
    },
    "/_auth/my-day/$taskId": {
      "filePath": "_auth.my-day.$taskId.tsx",
      "parent": "/_auth/my-day"
    },
    "/_auth/planned/$taskId": {
      "filePath": "_auth.planned.$taskId.tsx",
      "parent": "/_auth/planned"
    },
    "/_auth/index/$taskId": {
      "filePath": "_auth.index.$taskId.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
